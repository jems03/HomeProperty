
<!DOCTYPE html>
<html lang="en">
@model IPageViewModel<SitePageData>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>@Model.CurrentPage.MetaTitle</title>

    <!-- Favicon -->
    <link rel="shortcut icon" href="/img/favicon.ico" type="image/x-icon">
    <!-- Font awesome -->
    <link href="/css/font-awesome.css" rel="stylesheet">
    <!-- Bootstrap -->
    <link href="/css/bootstrap.css" rel="stylesheet">
    <!-- slick slider -->
    <link rel="stylesheet" type="text/css" href="/css/slick.css">
    <!-- price picker slider -->
    <link rel="stylesheet" type="text/css" href="/css/nouislider.css">
    <!-- Fancybox slider -->
    <link rel="stylesheet" href="/css/jquery.fancybox.css" type="text/css" media="screen" />
    <!-- Theme color -->
    <link id="switcher" href="/css/theme-color/default-theme.css" rel="stylesheet">
    <!-- Main style sheet -->
    <link href="/css/style.css" rel="stylesheet">
    <!-- Google Font -->
    <link href='https://fonts.googleapis.com/css?family=Vollkorn' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    @Html.RequiredClientResources(RenderingTags.Header)

</head>
<body class="aa-price-range">

    @await Html.RenderEPiServerQuickNavigatorAsync()

    <!-- Pre Loader -->
    <div id="aa-preloader-area">
        <div class="pulse"></div>
    </div>
    <!-- SCROLL TOP BUTTON -->
    <a class="scrollToTop" href="#"><i class="fa fa-angle-double-up"></i></a>
    <!-- END SCROLL TOP BUTTON -->

    @{
        await Html.RenderPartialAsync("Header", Model);
                        @RenderBody()
        await Html.RenderPartialAsync("Footer", Model);
    }
   
    @Html.RequiredClientResources(RenderingTags.Footer)
    <!-- jQuery library -->
    <!--<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script> -->
    <script src="/js/jquery.min.js"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/js/bootstrap.js"></script>
    <!-- slick slider -->
    <script type="text/javascript" src="/js/slick.js"></script>
    <!-- Price picker slider -->
    <script type="text/javascript" src="/js/nouislider.js"></script>
    <!-- mixit slider -->
    <script type="text/javascript" src="/js/jquery.mixitup.js"></script>
    <!-- Add fancyBox -->
    <script type="text/javascript" src="/js/jquery.fancybox.pack.js"></script>
    <!-- Custom js -->
    <script src="/js/custom.js"></script>

    <script>
        $(document).ready(function () {
            let itemsPerPage = $('#itemsPerPage');
            let propertyList = $('#propertyList');
            let propertyListItem = propertyList.children('li').toArray(); // Convert to array
            console.log(propertyListItem);

            $('#sortProperty').on('change', function () {
                const sortValue = $(this).val();
                console.log(`Sorting by: ${sortValue}`);

                // Sort the property list based on the selected sort value
                propertyListItem.sort((a, b) => {
                    const propertyA = $(a).data(sortValue);
                    const propertyB = $(b).data(sortValue);

                    // Numeric or date-based sorting
                    if (sortValue === 'price' || sortValue === 'date') {
                        return propertyA > propertyB ? 1 : -1;
                    }

                    // Alphabetical sorting for other values
                    return propertyA.localeCompare(propertyB);
                });

                console.log('propertyListItem:', propertyListItem);

                $.each(propertyListItem, function (idx, item) {
                    propertyList.append(item);
                });
            });

        });

    </script>

</body>
</html>